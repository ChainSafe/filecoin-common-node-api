{
  "openrpc": "1.3.2",
  "info": {
    "title": "forest",
    "version": "0.20.0"
  },
  "methods": [
    {
      "name": "Filecoin.AuthNew",
      "params": [
        {
          "name": "permissions",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "expiration_secs",
          "required": true,
          "schema": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.AuthNew.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.AuthVerify",
      "params": [
        {
          "name": "header_raw",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Filecoin.AuthVerify.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainExport",
      "params": [
        {
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ChainExportParams"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainExport.Result",
        "required": false,
        "schema": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetBlock",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetBlock.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BlockHeader"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetBlockMessages",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetBlockMessages.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BlockMessages"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetEvents",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetEvents.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetGenesis",
      "params": [],
      "result": {
        "name": "Filecoin.ChainGetGenesis.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Tipset"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetMessage",
      "params": [
        {
          "name": "msg_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetMessage.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Message"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetMessagesInTipset",
      "params": [
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetMessagesInTipset.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/ApiMessage"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetMinBaseFee",
      "params": [
        {
          "name": "lookback",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetMinBaseFee.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetParentMessages",
      "params": [
        {
          "name": "block_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetParentMessages.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/ApiMessage"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetParentReceipts",
      "params": [
        {
          "name": "block_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetParentReceipts.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/ApiReceipt"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetPath",
      "params": [
        {
          "name": "from",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          }
        },
        {
          "name": "to",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetPath.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/PathChange_for_Tipset"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetTipSet",
      "params": [
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetTipSet.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Tipset"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetTipSetAfterHeight",
      "params": [
        {
          "name": "height",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetTipSetAfterHeight.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Tipset"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainGetTipSetByHeight",
      "params": [
        {
          "name": "height",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainGetTipSetByHeight.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Tipset"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainHasObj",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainHasObj.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainHead",
      "params": [],
      "result": {
        "name": "Filecoin.ChainHead.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Tipset"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainReadObj",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainReadObj.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainSetHead",
      "params": [
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainSetHead.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainStatObj",
      "params": [
        {
          "name": "obj_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        },
        {
          "name": "base_cid",
          "required": true,
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Cid"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainStatObj.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ObjStat"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.ChainTipSetWeight",
      "params": [
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.ChainTipSetWeight.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.Session",
      "params": [],
      "result": {
        "name": "Filecoin.Session.Result",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.Shutdown",
      "params": [],
      "result": {
        "name": "Filecoin.Shutdown.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StartTime",
      "params": [],
      "result": {
        "name": "Filecoin.StartTime.Result",
        "required": true,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.Version",
      "params": [],
      "result": {
        "name": "Filecoin.Version.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/PublicVersion"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthAccounts",
      "params": [],
      "result": {
        "name": "Filecoin.EthAccounts.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthAddressToFilecoinAddress",
      "params": [
        {
          "name": "eth_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthAddress"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthAddressToFilecoinAddress.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthBlockNumber",
      "params": [],
      "result": {
        "name": "Filecoin.EthBlockNumber.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthCall",
      "params": [
        {
          "name": "tx",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthCallMessage"
          }
        },
        {
          "name": "block_param",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthCall.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthBytes"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthChainId",
      "params": [],
      "result": {
        "name": "Filecoin.EthChainId.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthEstimateGas",
      "params": [
        {
          "name": "tx",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthCallMessage"
          }
        },
        {
          "name": "block_param",
          "required": true,
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BlockNumberOrHash"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthEstimateGas.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthUint64"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthFeeHistory",
      "params": [
        {
          "name": "block_count",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthUint64"
          }
        },
        {
          "name": "newest_block_number",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrPredefined"
          }
        },
        {
          "name": "reward_percentiles",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthFeeHistory.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthFeeHistoryResult"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGasPrice",
      "params": [],
      "result": {
        "name": "Filecoin.EthGasPrice.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthBigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetBalance",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthAddress"
          }
        },
        {
          "name": "block_param",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetBalance.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthBigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetBlockByHash",
      "params": [
        {
          "name": "block_param",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        },
        {
          "name": "full_tx_info",
          "required": true,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetBlockByHash.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Block"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetBlockByNumber",
      "params": [
        {
          "name": "block_param",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        },
        {
          "name": "full_tx_info",
          "required": true,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetBlockByNumber.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Block"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetBlockTransactionCountByHash",
      "params": [
        {
          "name": "block_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetBlockTransactionCountByHash.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthUint64"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetBlockTransactionCountByNumber",
      "params": [
        {
          "name": "block_number",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthInt64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetBlockTransactionCountByNumber.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthUint64"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetCode",
      "params": [
        {
          "name": "eth_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthAddress"
          }
        },
        {
          "name": "block_number_or_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetCode.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthBytes"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetMessageCidByTransactionHash",
      "params": [
        {
          "name": "tx_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetMessageCidByTransactionHash.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Cid"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetStorageAt",
      "params": [
        {
          "name": "eth_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthAddress"
          }
        },
        {
          "name": "position",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthBytes"
          }
        },
        {
          "name": "block_number_or_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetStorageAt.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthBytes"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionByHash",
      "params": [
        {
          "name": "tx_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionByHash.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ApiEthTx"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionByHashLimited",
      "params": [
        {
          "name": "tx_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthHash"
          }
        },
        {
          "name": "limit",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionByHashLimited.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ApiEthTx"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionCount",
      "params": [
        {
          "name": "sender",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthAddress"
          }
        },
        {
          "name": "block_param",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumberOrHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionCount.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthUint64"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionHashByCid",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionHashByCid.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/EthHash"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionByBlockNumberAndIndex",
      "params": [
        {
          "name": "p1",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthUint64"
          }
        },
        {
          "name": "p2",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthUint64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionByBlockNumberAndIndex.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ApiEthTx"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionByBlockHashAndIndex",
      "params": [
        {
          "name": "p1",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthHash"
          }
        },
        {
          "name": "p2",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthUint64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionByBlockHashAndIndex.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ApiEthTx"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthMaxPriorityFeePerGas",
      "params": [],
      "result": {
        "name": "Filecoin.EthMaxPriorityFeePerGas.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthBigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthProtocolVersion",
      "params": [],
      "result": {
        "name": "Filecoin.EthProtocolVersion.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthUint64"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthGetTransactionReceipt",
      "params": [
        {
          "name": "tx_hash",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthHash"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthGetTransactionReceipt.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthTxReceipt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthNewFilter",
      "params": [
        {
          "name": "filter_spec",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthFilterSpec"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthNewFilter.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/FilterID"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthNewPendingTransactionFilter",
      "params": [],
      "result": {
        "name": "Filecoin.EthNewPendingTransactionFilter.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/FilterID"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthNewBlockFilter",
      "params": [],
      "result": {
        "name": "Filecoin.EthNewBlockFilter.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/FilterID"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthUninstallFilter",
      "params": [
        {
          "name": "filter_id",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FilterID"
          }
        }
      ],
      "result": {
        "name": "Filecoin.EthUninstallFilter.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.EthSyncing",
      "params": [],
      "result": {
        "name": "Filecoin.EthSyncing.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/EthSyncingResultLotusJson"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.Web3ClientVersion",
      "params": [],
      "result": {
        "name": "Filecoin.Web3ClientVersion.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.GasEstimateFeeCap",
      "params": [
        {
          "name": "message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Message"
          }
        },
        {
          "name": "max_queue_blocks",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.GasEstimateFeeCap.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.GasEstimateGasLimit",
      "params": [
        {
          "name": "msg",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Message"
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.GasEstimateGasLimit.Result",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.GasEstimateGasPremium",
      "params": [
        {
          "name": "nblocksincl",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "sender",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "gas_limit",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.GasEstimateGasPremium.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.GasEstimateMessageGas",
      "params": [
        {
          "name": "msg",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Message"
          }
        },
        {
          "name": "spec",
          "required": true,
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessageSendSpec"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.GasEstimateMessageGas.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Message"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MarketAddBalance",
      "params": [
        {
          "name": "wallet",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "amount",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      ],
      "result": {
        "name": "Filecoin.MarketAddBalance.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Cid"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MinerCreateBlock",
      "params": [
        {
          "name": "block_template",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockTemplate"
          }
        }
      ],
      "result": {
        "name": "Filecoin.MinerCreateBlock.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BlockMessage"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MinerGetBaseInfo",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MinerGetBaseInfo.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/MiningBaseInfo"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolBatchPush",
      "params": [
        {
          "name": "msgs",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/SignedMessage"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolBatchPush.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolBatchPushUntrusted",
      "params": [
        {
          "name": "msgs",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/SignedMessage"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolBatchPushUntrusted.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolGetNonce",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolGetNonce.Result",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolPending",
      "params": [
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolPending.Result",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/SignedMessage"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolPush",
      "params": [
        {
          "name": "msg",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SignedMessage"
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolPush.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Cid"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolPushMessage",
      "params": [
        {
          "name": "usmg",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Message"
          }
        },
        {
          "name": "spec",
          "required": true,
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessageSendSpec"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolPushMessage.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SignedMessage"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolPushUntrusted",
      "params": [
        {
          "name": "msg",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SignedMessage"
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolPushUntrusted.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Cid"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MpoolSelect",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        },
        {
          "name": "ticket_quality",
          "required": true,
          "schema": {
            "type": "number",
            "format": "double"
          }
        }
      ],
      "result": {
        "name": "Filecoin.MpoolSelect.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/SignedMessage"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MsigGetAvailableBalance",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MsigGetAvailableBalance.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MsigGetPending",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MsigGetPending.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Transaction"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MsigGetVested",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "start_tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        },
        {
          "name": "end_tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MsigGetVested.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.MsigGetVestingSchedule",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.MsigGetVestingSchedule.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MsigVesting"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetAddrsListen",
      "params": [],
      "result": {
        "name": "Filecoin.NetAddrsListen.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/AddrInfo"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetAgentVersion",
      "params": [
        {
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Filecoin.NetAgentVersion.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetAutoNatStatus",
      "params": [],
      "result": {
        "name": "Filecoin.NetAutoNatStatus.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NatStatusResult"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetConnect",
      "params": [
        {
          "name": "info",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AddrInfo"
          }
        }
      ],
      "result": {
        "name": "Filecoin.NetConnect.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetDisconnect",
      "params": [
        {
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Filecoin.NetDisconnect.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetFindPeer",
      "params": [
        {
          "name": "peer_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Filecoin.NetFindPeer.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/AddrInfo"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Forest.NetInfo",
      "params": [],
      "result": {
        "name": "Forest.NetInfo.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NetInfoResult"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetListening",
      "params": [],
      "result": {
        "name": "Filecoin.NetListening.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetPeers",
      "params": [],
      "result": {
        "name": "Filecoin.NetPeers.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/AddrInfo"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetProtectAdd",
      "params": [
        {
          "name": "peer_ids",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.NetProtectAdd.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetProtectList",
      "params": [],
      "result": {
        "name": "Filecoin.NetProtectList.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetProtectRemove",
      "params": [
        {
          "name": "peer_ids",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.NetProtectRemove.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NetVersion",
      "params": [],
      "result": {
        "name": "Filecoin.NetVersion.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.NodeStatus",
      "params": [],
      "result": {
        "name": "Filecoin.NodeStatus.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NodeStatusResult"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateAccountKey",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateAccountKey.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateCall",
      "params": [
        {
          "name": "message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Message"
          }
        },
        {
          "name": "tsk",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateCall.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiInvocResult"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateCirculatingSupply",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateCirculatingSupply.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Forest.StateCompute",
      "params": [
        {
          "name": "epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "result": {
        "name": "Forest.StateCompute.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Cid"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateDealProviderCollateralBounds",
      "params": [
        {
          "name": "size",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "verified",
          "required": true,
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateDealProviderCollateralBounds.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/DealCollateralBounds"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Forest.StateFetchRoot",
      "params": [
        {
          "name": "root_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        },
        {
          "name": "save_to_file",
          "required": true,
          "schema": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      ],
      "result": {
        "name": "Forest.StateFetchRoot.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetActor",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetActor.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ActorState"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetAllAllocations",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetAllAllocations.Result",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Allocation"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetAllClaims",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetAllClaims.Result",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/ClaimLotusJson"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetAllocation",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "allocation_id",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetAllocation.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Allocation"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetAllocationForPendingDeal",
      "params": [
        {
          "name": "deal_id",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetAllocationForPendingDeal.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Allocation"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetAllocationIdForPendingDeal",
      "params": [
        {
          "name": "deal_id",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetAllocationIdForPendingDeal.Result",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetAllocations",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetAllocations.Result",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Allocation"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetBeaconEntry",
      "params": [
        {
          "name": "epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetBeaconEntry.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BeaconEntry"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetClaim",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "claim_id",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetClaim.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/ClaimLotusJson"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetClaims",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetClaims.Result",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/ClaimLotusJson"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetNetworkParams",
      "params": [],
      "result": {
        "name": "Filecoin.StateGetNetworkParams.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/NetworkParams"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetRandomnessDigestFromBeacon",
      "params": [
        {
          "name": "rand_epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetRandomnessDigestFromBeacon.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetRandomnessDigestFromTickets",
      "params": [
        {
          "name": "rand_epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetRandomnessDigestFromTickets.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetRandomnessFromBeacon",
      "params": [
        {
          "name": "personalization",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "rand_epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "entropy",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64String"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetRandomnessFromBeacon.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetRandomnessFromTickets",
      "params": [
        {
          "name": "personalization",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "rand_epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "entropy",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64String"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetRandomnessFromTickets.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateGetReceipt",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateGetReceipt.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Receipt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateListActors",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateListActors.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateListMessages",
      "params": [
        {
          "name": "message_filter",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MessageFilter"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        },
        {
          "name": "max_height",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateListMessages.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateListMiners",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateListMiners.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateLookupID",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateLookupID.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateLookupRobustAddress",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateLookupRobustAddress.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMarketBalance",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMarketBalance.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MarketBalance"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMarketDeals",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMarketDeals.Result",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/ApiMarketDeal"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMarketParticipants",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMarketParticipants.Result",
        "required": true,
        "schema": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/MarketBalance"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMarketStorageDeal",
      "params": [
        {
          "name": "deal_id",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMarketStorageDeal.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiMarketDeal"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerActiveSectors",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerActiveSectors.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/SectorOnChainInfo"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerAllocated",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerAllocated.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BitField"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerAvailableBalance",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerAvailableBalance.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerDeadlines",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerDeadlines.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/ApiDeadline"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerFaults",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerFaults.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BitField"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerInfo",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerInfo.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MinerInfo"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerInitialPledgeCollateral",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_pre_commit_info",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SectorPreCommitInfo"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerInitialPledgeCollateral.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerPartitions",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "deadline_index",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerPartitions.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/MinerPartitions"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerPower",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerPower.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MinerPower"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerPreCommitDepositForPower",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_pre_commit_info",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SectorPreCommitInfo"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerPreCommitDepositForPower.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerProvingDeadline",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerProvingDeadline.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiDeadlineInfo"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerRecoveries",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerRecoveries.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BitField"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerSectorAllocated",
      "params": [
        {
          "name": "miner_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerSectorAllocated.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerSectorCount",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerSectorCount.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MinerSectors"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateMinerSectors",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sectors",
          "required": true,
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BitField"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateMinerSectors.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/SectorOnChainInfo"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateNetworkName",
      "params": [],
      "result": {
        "name": "Filecoin.StateNetworkName.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateNetworkVersion",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateNetworkVersion.Result",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateReadState",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateReadState.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiActorState"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateReplay",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        },
        {
          "name": "message_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateReplay.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ApiInvocResult"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateSearchMsg",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        },
        {
          "name": "message_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        },
        {
          "name": "look_back_limit",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "allow_replaced",
          "required": true,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateSearchMsg.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MessageLookup"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateSectorExpiration",
      "params": [
        {
          "name": "miner_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateSectorExpiration.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SectorExpiration"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateSectorGetInfo",
      "params": [
        {
          "name": "miner_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateSectorGetInfo.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/SectorOnChainInfo"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateSectorPartition",
      "params": [
        {
          "name": "miner_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateSectorPartition.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SectorLocation"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateSectorPreCommitInfo",
      "params": [
        {
          "name": "miner_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "sector_number",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateSectorPreCommitInfo.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/SectorPreCommitOnChainInfo"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateVerifiedClientStatus",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateVerifiedClientStatus.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/BigInt"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateVerifiedRegistryRootKey",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateVerifiedRegistryRootKey.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateVerifierStatus",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateVerifierStatus.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/BigInt"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateVMCirculatingSupplyInternal",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Cid"
            }
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateVMCirculatingSupplyInternal.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/CirculatingSupply"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.StateWaitMsg",
      "params": [
        {
          "name": "message_cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        },
        {
          "name": "confidence",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "look_back_limit",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "allow_replaced",
          "required": true,
          "schema": {
            "type": "boolean"
          }
        }
      ],
      "result": {
        "name": "Filecoin.StateWaitMsg.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MessageLookup"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.SyncCheckBad",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.SyncCheckBad.Result",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.SyncMarkBad",
      "params": [
        {
          "name": "cid",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      ],
      "result": {
        "name": "Filecoin.SyncMarkBad.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.SyncState",
      "params": [],
      "result": {
        "name": "Filecoin.SyncState.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/RPCSyncState"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.SyncSubmitBlock",
      "params": [
        {
          "name": "blk",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/GossipBlock"
          }
        }
      ],
      "result": {
        "name": "Filecoin.SyncSubmitBlock.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletBalance",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletBalance.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/BigInt"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletDefaultAddress",
      "params": [],
      "result": {
        "name": "Filecoin.WalletDefaultAddress.Result",
        "required": false,
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/Address"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletDelete",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletDelete.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletExport",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletExport.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/KeyInfo"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletHas",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletHas.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletImport",
      "params": [
        {
          "name": "key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KeyInfo"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletImport.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletList",
      "params": [],
      "result": {
        "name": "Filecoin.WalletList.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletNew",
      "params": [
        {
          "name": "signature_type",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SignatureTypeLotusJson"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletNew.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletSetDefault",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletSetDefault.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletSign",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletSign.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Signature"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletSignMessage",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Message"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletSignMessage.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SignedMessage"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletValidateAddress",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletValidateAddress.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.WalletVerify",
      "params": [
        {
          "name": "address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64String"
          }
        },
        {
          "name": "signature",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Signature"
          }
        }
      ],
      "result": {
        "name": "Filecoin.WalletVerify.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3GetCertificate",
      "params": [
        {
          "name": "instance",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Filecoin.F3GetCertificate.Result",
        "required": true,
        "schema": true
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3GetECPowerTable",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/F3TipSetKey"
          }
        }
      ],
      "result": {
        "name": "Filecoin.F3GetECPowerTable.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/F3PowerEntry"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3GetF3PowerTable",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/F3TipSetKey"
          }
        }
      ],
      "result": {
        "name": "Filecoin.F3GetF3PowerTable.Result",
        "required": true,
        "schema": true
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3IsRunning",
      "params": [],
      "result": {
        "name": "Filecoin.F3IsRunning.Result",
        "required": true,
        "schema": true
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3GetProgress",
      "params": [],
      "result": {
        "name": "Filecoin.F3GetProgress.Result",
        "required": true,
        "schema": true
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3GetLatestCertificate",
      "params": [],
      "result": {
        "name": "Filecoin.F3GetLatestCertificate.Result",
        "required": true,
        "schema": true
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.F3Participate",
      "params": [
        {
          "name": "miner_address",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Address"
          }
        },
        {
          "name": "new_lease_expiration",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        },
        {
          "name": "old_lease_expiration",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date-time"
          }
        }
      ],
      "result": {
        "name": "Filecoin.F3Participate.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.GetHead",
      "params": [],
      "result": {
        "name": "F3.GetHead.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/F3TipSet"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.GetParent",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/F3TipSetKey"
          }
        }
      ],
      "result": {
        "name": "F3.GetParent.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/F3TipSet"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.GetParticipatingMinerIDs",
      "params": [],
      "result": {
        "name": "F3.GetParticipatingMinerIDs.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.GetPowerTable",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/F3TipSetKey"
          }
        }
      ],
      "result": {
        "name": "F3.GetPowerTable.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/F3PowerEntry"
          }
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.GetTipset",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/F3TipSetKey"
          }
        }
      ],
      "result": {
        "name": "F3.GetTipset.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/F3TipSet"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.GetTipsetByEpoch",
      "params": [
        {
          "name": "epoch",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "result": {
        "name": "F3.GetTipsetByEpoch.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/F3TipSet"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.Finalize",
      "params": [
        {
          "name": "tipset_key",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/F3TipSetKey"
          }
        }
      ],
      "result": {
        "name": "F3.Finalize.Result",
        "required": true,
        "schema": {
          "type": "null"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.ProtectPeer",
      "params": [
        {
          "name": "peer_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "F3.ProtectPeer.Result",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "F3.SignMessage",
      "params": [
        {
          "name": "pubkey",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64String"
          }
        },
        {
          "name": "message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      ],
      "result": {
        "name": "F3.SignMessage.Result",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Signature"
        }
      },
      "paramStructure": "by-position"
    },
    {
      "name": "Filecoin.GetActorEventsRaw",
      "params": [
        {
          "name": "filter",
          "required": true,
          "schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActorEventFilter"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Filecoin.GetActorEventsRaw.Result",
        "required": false,
        "schema": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/components/schemas/ActorEvent"
          }
        }
      },
      "paramStructure": "by-position"
    }
  ],
  "components": {
    "schemas": {
      "ActorEvent": {
        "type": "object",
        "required": [
          "emitter",
          "entries",
          "height",
          "msgCid",
          "reverted",
          "tipsetKey"
        ],
        "properties": {
          "emitter": {
            "$ref": "#/components/schemas/Address"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventEntry"
            }
          },
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "msgCid": {
            "$ref": "#/components/schemas/Cid"
          },
          "reverted": {
            "type": "boolean"
          },
          "tipsetKey": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          }
        }
      },
      "ActorEventBlock": {
        "type": "object",
        "required": [
          "codec",
          "value"
        ],
        "properties": {
          "codec": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "value": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      },
      "ActorEventFilter": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActorEventBlock"
              }
            }
          },
          "fromHeight": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "tipsetKey": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
              },
              {
                "type": "null"
              }
            ]
          },
          "toHeight": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      },
      "ActorState": {
        "type": "object",
        "required": [
          "Balance",
          "Code",
          "Head",
          "Nonce"
        ],
        "properties": {
          "Balance": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Code": {
            "$ref": "#/components/schemas/Cid"
          },
          "DelegatedAddress": {
            "$ref": "#/components/schemas/Nullable_Address"
          },
          "Head": {
            "$ref": "#/components/schemas/Cid"
          },
          "Nonce": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "ActorTrace": {
        "type": "object",
        "required": [
          "Id",
          "State"
        ],
        "properties": {
          "Id": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "State": {
            "$ref": "#/components/schemas/ActorState"
          }
        }
      },
      "AddrInfo": {
        "type": "object",
        "required": [
          "Addrs",
          "ID"
        ],
        "properties": {
          "Addrs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          },
          "ID": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "string"
      },
      "Allocation": {
        "type": "object",
        "required": [
          "Client",
          "Data",
          "Expiration",
          "Provider",
          "Size",
          "TermMax",
          "TermMin"
        ],
        "properties": {
          "Client": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Data": {
            "$ref": "#/components/schemas/Cid"
          },
          "Expiration": {
            "type": "integer",
            "format": "int64"
          },
          "Provider": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Size": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "TermMax": {
            "type": "integer",
            "format": "int64"
          },
          "TermMin": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiActorState": {
        "type": "object",
        "required": [
          "Balance",
          "Code",
          "State"
        ],
        "properties": {
          "Balance": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Code": {
            "$ref": "#/components/schemas/Cid"
          },
          "State": {
            "$ref": "#/components/schemas/ApiState"
          }
        }
      },
      "ApiDeadline": {
        "type": "object",
        "required": [
          "DisputableProofCount",
          "PostSubmissions"
        ],
        "properties": {
          "DisputableProofCount": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "PostSubmissions": {
            "$ref": "#/components/schemas/BitField"
          }
        }
      },
      "ApiDeadlineInfo": {
        "type": "string"
      },
      "ApiDealProposal": {
        "type": "object",
        "required": [
          "Client",
          "ClientCollateral",
          "EndEpoch",
          "Label",
          "PieceCID",
          "PieceSize",
          "Provider",
          "ProviderCollateral",
          "StartEpoch",
          "StoragePricePerEpoch",
          "VerifiedDeal"
        ],
        "properties": {
          "Client": {
            "$ref": "#/components/schemas/Address"
          },
          "ClientCollateral": {
            "$ref": "#/components/schemas/BigInt"
          },
          "EndEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "Label": {
            "type": "string"
          },
          "PieceCID": {
            "$ref": "#/components/schemas/Cid"
          },
          "PieceSize": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Provider": {
            "$ref": "#/components/schemas/Address"
          },
          "ProviderCollateral": {
            "$ref": "#/components/schemas/BigInt"
          },
          "StartEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "StoragePricePerEpoch": {
            "$ref": "#/components/schemas/BigInt"
          },
          "VerifiedDeal": {
            "type": "boolean"
          }
        }
      },
      "ApiDealState": {
        "type": "object",
        "required": [
          "LastUpdatedEpoch",
          "SectorStartEpoch",
          "SlashEpoch"
        ],
        "properties": {
          "LastUpdatedEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "SectorStartEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "SlashEpoch": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiEthTx": {
        "type": "object",
        "required": [
          "blockHash",
          "blockNumber",
          "chainId",
          "from",
          "gas",
          "hash",
          "input",
          "nonce",
          "r",
          "s",
          "transactionIndex",
          "type",
          "v",
          "value"
        ],
        "properties": {
          "accessList": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/EthHash"
            }
          },
          "blockHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "blockNumber": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "chainId": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "from": {
            "$ref": "#/components/schemas/EthAddress"
          },
          "gas": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "gasPrice": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthBigInt"
              },
              {
                "type": "null"
              }
            ]
          },
          "hash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "input": {
            "$ref": "#/components/schemas/EthBytes"
          },
          "maxFeePerGas": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthBigInt"
              },
              {
                "type": "null"
              }
            ]
          },
          "maxPriorityFeePerGas": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthBigInt"
              },
              {
                "type": "null"
              }
            ]
          },
          "nonce": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "r": {
            "$ref": "#/components/schemas/EthBigInt"
          },
          "s": {
            "$ref": "#/components/schemas/EthBigInt"
          },
          "to": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "transactionIndex": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "type": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "v": {
            "$ref": "#/components/schemas/EthBigInt"
          },
          "value": {
            "$ref": "#/components/schemas/EthBigInt"
          }
        }
      },
      "ApiInvocResult": {
        "type": "object",
        "required": [
          "Duration",
          "Error",
          "GasCost",
          "Msg",
          "MsgCid",
          "MsgRct"
        ],
        "properties": {
          "Duration": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Error": {
            "type": "string"
          },
          "ExecutionTrace": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExecutionTrace"
              },
              {
                "type": "null"
              }
            ]
          },
          "GasCost": {
            "$ref": "#/components/schemas/MessageGasCost"
          },
          "Msg": {
            "$ref": "#/components/schemas/Message"
          },
          "MsgCid": {
            "$ref": "#/components/schemas/Cid"
          },
          "MsgRct": {
            "$ref": "#/components/schemas/Nullable_Receipt"
          }
        }
      },
      "ApiMarketDeal": {
        "type": "object",
        "required": [
          "Proposal",
          "State"
        ],
        "properties": {
          "Proposal": {
            "$ref": "#/components/schemas/ApiDealProposal"
          },
          "State": {
            "$ref": "#/components/schemas/ApiDealState"
          }
        }
      },
      "ApiMessage": {
        "type": "object",
        "required": [
          "Cid",
          "Message"
        ],
        "properties": {
          "Cid": {
            "$ref": "#/components/schemas/Cid"
          },
          "Message": {
            "$ref": "#/components/schemas/Message"
          }
        }
      },
      "ApiReceipt": {
        "type": "object",
        "required": [
          "EventsRoot",
          "ExitCode",
          "GasUsed",
          "Return"
        ],
        "properties": {
          "EventsRoot": {
            "$ref": "#/components/schemas/Nullable_Cid"
          },
          "ExitCode": {
            "$ref": "#/components/schemas/ExitCode"
          },
          "GasUsed": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Return": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      },
      "ApiState": {
        "type": "object",
        "required": [
          "BuiltinActors"
        ],
        "properties": {
          "BuiltinActors": true
        }
      },
      "Base64String": {
        "type": [
          "string",
          "null"
        ]
      },
      "BeaconEntry": {
        "type": "object",
        "required": [
          "Data",
          "Round"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Base64String"
          },
          "Round": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "BeneficiaryTerm": {
        "type": "object",
        "required": [
          "Expiration",
          "Quota",
          "UsedQuota"
        ],
        "properties": {
          "Expiration": {
            "description": "The epoch at which the beneficiary's rights expire and revert to the owner",
            "type": "integer",
            "format": "int64"
          },
          "Quota": {
            "description": "The total amount the current beneficiary can withdraw. Monotonic, but reset when beneficiary changes.",
            "$ref": "#/components/schemas/BigInt"
          },
          "UsedQuota": {
            "description": "The amount of quota the current beneficiary has already withdrawn",
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "BigInt": {
        "type": "string"
      },
      "BitField": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        }
      },
      "Block": {
        "type": "object",
        "required": [
          "baseFeePerGas",
          "difficulty",
          "extraData",
          "gasLimit",
          "gasUsed",
          "hash",
          "logsBloom",
          "miner",
          "mixHash",
          "nonce",
          "number",
          "parentHash",
          "receiptsRoot",
          "sha3Uncles",
          "size",
          "stateRoot",
          "timestamp",
          "totalDifficulty",
          "transactions",
          "transactionsRoot",
          "uncles"
        ],
        "properties": {
          "baseFeePerGas": {
            "$ref": "#/components/schemas/EthBigInt"
          },
          "difficulty": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "extraData": {
            "$ref": "#/components/schemas/EthBytes"
          },
          "gasLimit": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "gasUsed": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "hash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "logsBloom": {
            "$ref": "#/components/schemas/Bloom"
          },
          "miner": {
            "$ref": "#/components/schemas/EthAddress"
          },
          "mixHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "nonce": {
            "$ref": "#/components/schemas/Nonce"
          },
          "number": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "parentHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "receiptsRoot": {
            "$ref": "#/components/schemas/EthHash"
          },
          "sha3Uncles": {
            "$ref": "#/components/schemas/EthHash"
          },
          "size": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "stateRoot": {
            "$ref": "#/components/schemas/EthHash"
          },
          "timestamp": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "totalDifficulty": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "transactions": {
            "$ref": "#/components/schemas/Transactions"
          },
          "transactionsRoot": {
            "$ref": "#/components/schemas/EthHash"
          },
          "uncles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EthHash"
            }
          }
        }
      },
      "BlockHash": {
        "type": "object",
        "required": [
          "blockHash",
          "requireCanonical"
        ],
        "properties": {
          "blockHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "requireCanonical": {
            "type": "boolean"
          }
        }
      },
      "BlockHeader": {
        "type": "object",
        "required": [
          "BeaconEntries",
          "ForkSignaling",
          "Height",
          "Messages",
          "Miner",
          "ParentBaseFee",
          "ParentMessageReceipts",
          "ParentStateRoot",
          "ParentWeight",
          "Parents",
          "Timestamp",
          "WinPoStProof"
        ],
        "properties": {
          "BLSAggregate": {
            "$ref": "#/components/schemas/Nullable_Signature"
          },
          "BeaconEntries": {
            "$ref": "#/components/schemas/Nullable_Array_of_BeaconEntry"
          },
          "BlockSig": {
            "$ref": "#/components/schemas/Nullable_Signature"
          },
          "ElectionProof": {
            "$ref": "#/components/schemas/Nullable_ElectionProof"
          },
          "ForkSignaling": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Height": {
            "type": "integer",
            "format": "int64"
          },
          "Messages": {
            "$ref": "#/components/schemas/Cid"
          },
          "Miner": {
            "$ref": "#/components/schemas/Address"
          },
          "ParentBaseFee": {
            "$ref": "#/components/schemas/BigInt"
          },
          "ParentMessageReceipts": {
            "$ref": "#/components/schemas/Cid"
          },
          "ParentStateRoot": {
            "$ref": "#/components/schemas/Cid"
          },
          "ParentWeight": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Parents": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          },
          "Ticket": {
            "$ref": "#/components/schemas/Nullable_Ticket"
          },
          "Timestamp": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "WinPoStProof": {
            "$ref": "#/components/schemas/Nullable_Array_of_PoStProof"
          }
        }
      },
      "BlockMessage": {
        "type": "object",
        "required": [
          "BlsMessages",
          "Header",
          "SecpkMessages"
        ],
        "properties": {
          "BlsMessages": {
            "$ref": "#/components/schemas/Nullable_Array_of_Cid"
          },
          "Header": {
            "$ref": "#/components/schemas/BlockHeader"
          },
          "SecpkMessages": {
            "$ref": "#/components/schemas/Nullable_Array_of_Cid"
          }
        }
      },
      "BlockMessages": {
        "type": "object",
        "required": [
          "BlsMessages",
          "Cids",
          "SecpkMessages"
        ],
        "properties": {
          "BlsMessages": {
            "$ref": "#/components/schemas/Nullable_Array_of_Message"
          },
          "Cids": {
            "$ref": "#/components/schemas/Nullable_Array_of_Cid"
          },
          "SecpkMessages": {
            "$ref": "#/components/schemas/Nullable_Array_of_SignedMessage"
          }
        }
      },
      "BlockNumber": {
        "type": "object",
        "required": [
          "blockNumber"
        ],
        "properties": {
          "blockNumber": {
            "$ref": "#/components/schemas/EthInt64"
          }
        }
      },
      "BlockNumberOrHash": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/EthInt64"
          },
          {
            "$ref": "#/components/schemas/EthHash"
          },
          {
            "$ref": "#/components/schemas/BlockNumber"
          },
          {
            "$ref": "#/components/schemas/BlockHash"
          }
        ]
      },
      "BlockNumberOrPredefined": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/EthInt64"
          }
        ]
      },
      "BlockTemplate": {
        "type": "object",
        "required": [
          "BeaconValues",
          "Epoch",
          "Eproof",
          "Messages",
          "Miner",
          "Parents",
          "Ticket",
          "Timestamp",
          "WinningPoStProof"
        ],
        "properties": {
          "BeaconValues": {
            "$ref": "#/components/schemas/Nullable_Array_of_BeaconEntry"
          },
          "Epoch": {
            "$ref": "#/components/schemas/int64"
          },
          "Eproof": {
            "$ref": "#/components/schemas/ElectionProof"
          },
          "Messages": {
            "$ref": "#/components/schemas/Nullable_Array_of_SignedMessage"
          },
          "Miner": {
            "$ref": "#/components/schemas/Address"
          },
          "Parents": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          },
          "Ticket": {
            "$ref": "#/components/schemas/Ticket"
          },
          "Timestamp": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "WinningPoStProof": {
            "$ref": "#/components/schemas/Nullable_Array_of_PoStProof"
          }
        }
      },
      "Bloom": {
        "type": "string"
      },
      "ChainExportParams": {
        "type": "object",
        "required": [
          "dry_run",
          "epoch",
          "output_path",
          "recent_roots",
          "skip_checksum",
          "tipset_keys"
        ],
        "properties": {
          "dry_run": {
            "type": "boolean"
          },
          "epoch": {
            "type": "integer",
            "format": "int64"
          },
          "output_path": {
            "type": "string"
          },
          "recent_roots": {
            "type": "integer",
            "format": "int64"
          },
          "skip_checksum": {
            "type": "boolean"
          },
          "tipset_keys": {
            "$ref": "#/components/schemas/Nullable_Array_of_Cid"
          }
        }
      },
      "Cid": {
        "type": "object",
        "required": [
          "/"
        ],
        "properties": {
          "/": {
            "type": "string"
          }
        }
      },
      "CirculatingSupply": {
        "type": "object",
        "required": [
          "FilBurnt",
          "FilCirculating",
          "FilLocked",
          "FilMined",
          "FilReserveDisbursed",
          "FilVested"
        ],
        "properties": {
          "FilBurnt": {
            "$ref": "#/components/schemas/BigInt"
          },
          "FilCirculating": {
            "$ref": "#/components/schemas/BigInt"
          },
          "FilLocked": {
            "$ref": "#/components/schemas/BigInt"
          },
          "FilMined": {
            "$ref": "#/components/schemas/BigInt"
          },
          "FilReserveDisbursed": {
            "$ref": "#/components/schemas/BigInt"
          },
          "FilVested": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "Claim": {
        "type": "object",
        "required": [
          "QualityAdjPower",
          "RawBytePower"
        ],
        "properties": {
          "QualityAdjPower": {
            "description": "Sum of quality adjusted power for a miner's sectors.",
            "$ref": "#/components/schemas/BigInt"
          },
          "RawBytePower": {
            "description": "Sum of raw byte power for a miner's sectors.",
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "ClaimLotusJson": {
        "type": "object",
        "required": [
          "Client",
          "Data",
          "Provider",
          "Sector",
          "Size",
          "TermMax",
          "TermMin",
          "TermStart"
        ],
        "properties": {
          "Client": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Data": {
            "$ref": "#/components/schemas/Cid"
          },
          "Provider": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Sector": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Size": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "TermMax": {
            "type": "integer",
            "format": "int64"
          },
          "TermMin": {
            "type": "integer",
            "format": "int64"
          },
          "TermStart": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DealCollateralBounds": {
        "type": "object",
        "required": [
          "Max",
          "Min"
        ],
        "properties": {
          "Max": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Min": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "ElectionProof": {
        "type": "object",
        "required": [
          "VRFProof",
          "WinCount"
        ],
        "properties": {
          "VRFProof": {
            "$ref": "#/components/schemas/Base64String"
          },
          "WinCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EthAddress": {
        "type": "string"
      },
      "EthBigInt": {
        "type": "string"
      },
      "EthBytes": {
        "type": "string"
      },
      "EthCallMessage": {
        "type": "object",
        "required": [
          "data",
          "gas",
          "gasPrice",
          "value"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EthBytes"
          },
          "from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "gas": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "gasPrice": {
            "$ref": "#/components/schemas/EthBigInt"
          },
          "to": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/EthBigInt"
          }
        }
      },
      "EthFeeHistoryResult": {
        "type": "object",
        "required": [
          "baseFeePerGas",
          "gasUsedRatio",
          "oldestBlock"
        ],
        "properties": {
          "baseFeePerGas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EthBigInt"
            }
          },
          "gasUsedRatio": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "oldestBlock": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "reward": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EthBigInt"
              }
            }
          }
        }
      },
      "EthFilterSpec": {
        "description": "Represents a filter specification for querying Ethereum event logs. This struct can be used to specify criteria for filtering Ethereum event logs based on block range, address, topics, and block hash. It is useful for making requests to Ethereum nodes to fetch logs that match certain conditions.\n\n# Fields\n\n* `from_block` - Optional field interpreted as an epoch (in hex): - `\"latest\"`: latest mined block. - `\"earliest\"`: first block. - `\"pending\"`: blocks that have not yet been mined. If omitted, the default value is `\"latest\"`. This field is skipped during serialization if `None`.\n\n* `to_block` - Optional field interpreted as an epoch (in hex): - `\"latest\"`: latest mined block. - `\"earliest\"`: first block. - `\"pending\"`: blocks that have not yet been mined. If omitted, the default value is `\"latest\"`. This field is skipped during serialization if `None`.\n\n* `address` - Actor address or a list of addresses (`Vec<EthAddress>`) from which event logs should originate. If the filter needs to match a single address, it can be specified as single element vector. This field is required and cannot be omitted.\n\n* `topics` - List of topics (`EthTopicSpec`) to be matched in the event logs.\n\n* `block_hash` - Optional field specifying a block hash (`Hash`) Restricts event logs returned to those emitted from messages contained in this tipset. When `block_hash` is provided, neither `from_block` nor `to_block` can be specified. This field is skipped during serialization if `None`. [the spec](https://github.com/filecoin-project/lotus/blob/475139ff95407ed9d55d3a2ef87e28da66512937/chain/types/ethtypes/eth_types.go#L602-L627).",
        "type": "object",
        "required": [
          "address",
          "topics"
        ],
        "properties": {
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EthAddress"
            }
          },
          "blockHash": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthHash"
              },
              {
                "type": "null"
              }
            ]
          },
          "fromBlock": {
            "type": [
              "string",
              "null"
            ]
          },
          "toBlock": {
            "type": [
              "string",
              "null"
            ]
          },
          "topics": {
            "$ref": "#/components/schemas/EthTopicSpec"
          }
        }
      },
      "EthHash": {
        "type": "string"
      },
      "EthHashList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EthHash"
        }
      },
      "EthInt64": {
        "type": "string"
      },
      "EthLog": {
        "description": "Represents the results of an event filter execution.",
        "type": "object",
        "required": [
          "address",
          "blockHash",
          "blockNumber",
          "data",
          "logIndex",
          "removed",
          "topics",
          "transactionHash",
          "transactionIndex"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/EthAddress"
          },
          "blockHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "blockNumber": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "data": {
            "$ref": "#/components/schemas/EthBytes"
          },
          "logIndex": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "removed": {
            "type": "boolean"
          },
          "topics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EthHash"
            }
          },
          "transactionHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "transactionIndex": {
            "$ref": "#/components/schemas/EthUint64"
          }
        }
      },
      "EthSyncingResultLotusJson": {
        "anyOf": [
          {
            "type": "boolean"
          },
          {
            "type": "object",
            "required": [
              "currentblock",
              "highestblock",
              "startingblock"
            ],
            "properties": {
              "currentblock": {
                "type": "integer",
                "format": "int64"
              },
              "highestblock": {
                "type": "integer",
                "format": "int64"
              },
              "startingblock": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "EthTopicSpec": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EthHashList"
        }
      },
      "EthTxReceipt": {
        "type": "object",
        "required": [
          "blockHash",
          "blockNumber",
          "cumulativeGasUsed",
          "effectiveGasPrice",
          "from",
          "gasUsed",
          "logs",
          "logsBloom",
          "root",
          "status",
          "transactionHash",
          "transactionIndex",
          "type"
        ],
        "properties": {
          "blockHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "blockNumber": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "contractAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "cumulativeGasUsed": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "effectiveGasPrice": {
            "$ref": "#/components/schemas/EthBigInt"
          },
          "from": {
            "$ref": "#/components/schemas/EthAddress"
          },
          "gasUsed": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EthLog"
            }
          },
          "logsBloom": {
            "$ref": "#/components/schemas/EthBytes"
          },
          "root": {
            "$ref": "#/components/schemas/EthHash"
          },
          "status": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "to": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EthAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "transactionHash": {
            "$ref": "#/components/schemas/EthHash"
          },
          "transactionIndex": {
            "$ref": "#/components/schemas/EthUint64"
          },
          "type": {
            "$ref": "#/components/schemas/EthUint64"
          }
        }
      },
      "EthUint64": {
        "type": "string"
      },
      "Event": {
        "type": "object",
        "required": [
          "Emitter",
          "Entries"
        ],
        "properties": {
          "Emitter": {
            "description": "Actor ID",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventEntry"
            }
          }
        }
      },
      "EventEntry": {
        "type": "object",
        "required": [
          "Codec",
          "Flags",
          "Key",
          "Value"
        ],
        "properties": {
          "Codec": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Flags": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          "Key": {
            "type": "string"
          },
          "Value": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      },
      "ExecutionTrace": {
        "type": "object",
        "required": [
          "GasCharges",
          "Msg",
          "MsgRct",
          "Subcalls"
        ],
        "properties": {
          "GasCharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GasTrace"
            }
          },
          "InvokedActor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActorTrace"
              },
              {
                "type": "null"
              }
            ]
          },
          "Msg": {
            "$ref": "#/components/schemas/MessageTrace"
          },
          "MsgRct": {
            "$ref": "#/components/schemas/ReturnTrace"
          },
          "Subcalls": {
            "$ref": "#/components/schemas/Nullable_Array_of_ExecutionTrace"
          }
        }
      },
      "ExitCode": {
        "description": "`Newtype` wrapper for the FVM `ExitCode`.\n\n# Examples ``` # use forest_filecoin::doctest_private::ExitCode; let fvm2_success = fvm_shared2::error::ExitCode::new(0); let fvm3_success = fvm_shared3::error::ExitCode::new(0);\n\nlet shim_from_v2 = ExitCode::from(fvm2_success); let shim_from_v3 = ExitCode::from(fvm3_success);\n\nassert_eq!(shim_from_v2, shim_from_v3); assert_eq!(shim_from_v2, fvm2_success.into()); assert_eq!(shim_from_v3, fvm3_success.into()); ```",
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      },
      "ExtendedSectorInfo": {
        "type": "object",
        "required": [
          "SealProof",
          "SealedCID",
          "SectorKey",
          "SectorNumber"
        ],
        "properties": {
          "SealProof": {
            "$ref": "#/components/schemas/int64"
          },
          "SealedCID": {
            "$ref": "#/components/schemas/Cid"
          },
          "SectorKey": {
            "$ref": "#/components/schemas/Nullable_Cid"
          },
          "SectorNumber": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "F3PowerEntry": {
        "description": "PowerEntry represents a single entry in the PowerTable, including ActorID and its StoragePower and PubKey.",
        "type": "object",
        "required": [
          "ID",
          "Power",
          "PubKey"
        ],
        "properties": {
          "ID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Power": {
            "type": "string"
          },
          "PubKey": {
            "type": "string"
          }
        }
      },
      "F3TipSet": {
        "type": "object",
        "required": [
          "beacon",
          "epoch",
          "key",
          "timestamp"
        ],
        "properties": {
          "beacon": {
            "description": "The verifiable oracle randomness used to elect this block's author leader",
            "type": "string"
          },
          "epoch": {
            "description": "The period in which a new block is generated. There may be multiple rounds in an epoch.",
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "$ref": "#/components/schemas/F3TipSetKey"
          },
          "timestamp": {
            "description": "Block creation time, in seconds since the Unix epoch",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "F3TipSetKey": {
        "description": "TipSetKey is the canonically ordered concatenation of the block CIDs in a tipset.",
        "type": "string"
      },
      "FilterID": {
        "$ref": "#/components/schemas/EthHash"
      },
      "ForkUpgradeParams": {
        "type": "object",
        "required": [
          "BreezeGasTampingDuration",
          "UpgradeAssemblyHeight",
          "UpgradeBreezeHeight",
          "UpgradeCalicoHeight",
          "UpgradeChocolateHeight",
          "UpgradeClausHeight",
          "UpgradeDragonHeight",
          "UpgradeHyggeHeight",
          "UpgradeHyperdriveHeight",
          "UpgradeIgnitionHeight",
          "UpgradeKumquatHeight",
          "UpgradeLiftoffHeight",
          "UpgradeLightningHeight",
          "UpgradeNorwegianHeight",
          "UpgradeOhSnapHeight",
          "UpgradeOrangeHeight",
          "UpgradePersianHeight",
          "UpgradePhoenixHeight",
          "UpgradeRefuelHeight",
          "UpgradeSharkHeight",
          "UpgradeSkyrHeight",
          "UpgradeSmokeHeight",
          "UpgradeTapeHeight",
          "UpgradeThunderHeight",
          "UpgradeTrustHeight",
          "UpgradeTurboHeight",
          "UpgradeWaffleHeight",
          "UpgradeWatermelonHeight"
        ],
        "properties": {
          "BreezeGasTampingDuration": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeAssemblyHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeBreezeHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeCalicoHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeChocolateHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeClausHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeDragonHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeHyggeHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeHyperdriveHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeIgnitionHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeKumquatHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeLiftoffHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeLightningHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeNorwegianHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeOhSnapHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeOrangeHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradePersianHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradePhoenixHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeRefuelHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeSharkHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeSkyrHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeSmokeHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeTapeHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeThunderHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeTrustHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeTurboHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeWaffleHeight": {
            "type": "integer",
            "format": "int64"
          },
          "UpgradeWatermelonHeight": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GasTrace": {
        "type": "object",
        "required": [
          "Name",
          "cg",
          "sg",
          "tg",
          "tt"
        ],
        "properties": {
          "Name": {
            "type": "string"
          },
          "cg": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sg": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "tg": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "tt": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "GossipBlock": {
        "type": "object",
        "required": [
          "BlsMessages",
          "Header",
          "SecpkMessages"
        ],
        "properties": {
          "BlsMessages": {
            "$ref": "#/components/schemas/Cid"
          },
          "Header": {
            "$ref": "#/components/schemas/BlockHeader"
          },
          "SecpkMessages": {
            "$ref": "#/components/schemas/Cid"
          }
        }
      },
      "KeyInfo": {
        "type": "object",
        "required": [
          "PrivateKey",
          "Type"
        ],
        "properties": {
          "PrivateKey": {
            "$ref": "#/components/schemas/Base64String"
          },
          "Type": {
            "$ref": "#/components/schemas/SignatureTypeLotusJson"
          }
        }
      },
      "MarketBalance": {
        "description": "External format for returning market balance from state.",
        "type": "object",
        "required": [
          "Escrow",
          "Locked"
        ],
        "properties": {
          "Escrow": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Locked": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "Message": {
        "type": "object",
        "required": [
          "From",
          "To"
        ],
        "properties": {
          "From": {
            "$ref": "#/components/schemas/Address"
          },
          "GasFeeCap": {
            "default": "0",
            "$ref": "#/components/schemas/BigInt"
          },
          "GasLimit": {
            "default": 0,
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "GasPremium": {
            "default": "0",
            "$ref": "#/components/schemas/BigInt"
          },
          "Method": {
            "default": 0,
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Nonce": {
            "default": 0,
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Params": {
            "$ref": "#/components/schemas/Nullable_Base64String"
          },
          "To": {
            "$ref": "#/components/schemas/Address"
          },
          "Value": {
            "default": "0",
            "$ref": "#/components/schemas/BigInt"
          },
          "Version": {
            "default": 0,
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "MessageFilter": {
        "type": "object",
        "required": [
          "From",
          "To"
        ],
        "properties": {
          "From": {
            "$ref": "#/components/schemas/Nullable_Address"
          },
          "To": {
            "$ref": "#/components/schemas/Nullable_Address"
          }
        }
      },
      "MessageGasCost": {
        "type": "object",
        "required": [
          "BaseFeeBurn",
          "GasUsed",
          "Message",
          "MinerPenalty",
          "MinerTip",
          "OverEstimationBurn",
          "Refund",
          "TotalCost"
        ],
        "properties": {
          "BaseFeeBurn": {
            "$ref": "#/components/schemas/BigInt"
          },
          "GasUsed": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Message": {
            "$ref": "#/components/schemas/Nullable_Cid"
          },
          "MinerPenalty": {
            "$ref": "#/components/schemas/BigInt"
          },
          "MinerTip": {
            "$ref": "#/components/schemas/BigInt"
          },
          "OverEstimationBurn": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Refund": {
            "$ref": "#/components/schemas/BigInt"
          },
          "TotalCost": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "MessageLookup": {
        "type": "object",
        "required": [
          "Height",
          "Message",
          "Receipt",
          "ReturnDec",
          "TipSet"
        ],
        "properties": {
          "Height": {
            "type": "integer",
            "format": "int64"
          },
          "Message": {
            "$ref": "#/components/schemas/Cid"
          },
          "Receipt": {
            "$ref": "#/components/schemas/Receipt"
          },
          "ReturnDec": true,
          "TipSet": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          }
        }
      },
      "MessageSendSpec": {
        "type": "object",
        "required": [
          "MaxFee"
        ],
        "properties": {
          "MaxFee": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "MessageTrace": {
        "type": "object",
        "required": [
          "From",
          "Method",
          "Params",
          "ParamsCodec",
          "To",
          "Value"
        ],
        "properties": {
          "From": {
            "$ref": "#/components/schemas/Address"
          },
          "GasLimit": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          },
          "Method": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Params": {
            "$ref": "#/components/schemas/Base64String"
          },
          "ParamsCodec": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "ReadOnly": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "To": {
            "$ref": "#/components/schemas/Address"
          },
          "Value": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "MinerInfo": {
        "type": "object",
        "required": [
          "Beneficiary",
          "BeneficiaryTerm",
          "ConsensusFaultElapsed",
          "ControlAddresses",
          "Multiaddrs",
          "NewWorker",
          "Owner",
          "PeerId",
          "PendingBeneficiaryTerm",
          "PendingOwnerAddress",
          "SectorSize",
          "WindowPoStPartitionSectors",
          "WindowPoStProofType",
          "Worker",
          "WorkerChangeEpoch"
        ],
        "properties": {
          "Beneficiary": {
            "$ref": "#/components/schemas/Address"
          },
          "BeneficiaryTerm": {
            "$ref": "#/components/schemas/BeneficiaryTerm"
          },
          "ConsensusFaultElapsed": {
            "type": "integer",
            "format": "int64"
          },
          "ControlAddresses": {
            "$ref": "#/components/schemas/Nullable_Array_of_Address"
          },
          "Multiaddrs": {
            "$ref": "#/components/schemas/Nullable_Array_of_Base64String"
          },
          "NewWorker": {
            "$ref": "#/components/schemas/Nullable_Address"
          },
          "Owner": {
            "$ref": "#/components/schemas/Address"
          },
          "PeerId": {
            "$ref": "#/components/schemas/Nullable_String"
          },
          "PendingBeneficiaryTerm": {
            "$ref": "#/components/schemas/Nullable_PendingBeneficiaryChange"
          },
          "PendingOwnerAddress": {
            "$ref": "#/components/schemas/Nullable_Address"
          },
          "SectorSize": {
            "$ref": "#/components/schemas/SectorSize"
          },
          "WindowPoStPartitionSectors": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "WindowPoStProofType": {
            "type": "string"
          },
          "Worker": {
            "$ref": "#/components/schemas/Address"
          },
          "WorkerChangeEpoch": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MinerPartitions": {
        "type": "object",
        "required": [
          "ActiveSectors",
          "AllSectors",
          "FaultySectors",
          "LiveSectors",
          "RecoveringSectors"
        ],
        "properties": {
          "ActiveSectors": {
            "$ref": "#/components/schemas/BitField"
          },
          "AllSectors": {
            "$ref": "#/components/schemas/BitField"
          },
          "FaultySectors": {
            "$ref": "#/components/schemas/BitField"
          },
          "LiveSectors": {
            "$ref": "#/components/schemas/BitField"
          },
          "RecoveringSectors": {
            "$ref": "#/components/schemas/BitField"
          }
        }
      },
      "MinerPower": {
        "type": "object",
        "required": [
          "HasMinPower",
          "MinerPower",
          "TotalPower"
        ],
        "properties": {
          "HasMinPower": {
            "type": "boolean"
          },
          "MinerPower": {
            "$ref": "#/components/schemas/Claim"
          },
          "TotalPower": {
            "$ref": "#/components/schemas/Claim"
          }
        }
      },
      "MinerSectors": {
        "type": "object",
        "required": [
          "Active",
          "Faulty",
          "Live"
        ],
        "properties": {
          "Active": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Faulty": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Live": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "MiningBaseInfo": {
        "type": "object",
        "required": [
          "BeaconEntries",
          "EligibleForMining",
          "MinerPower",
          "NetworkPower",
          "PrevBeaconEntry",
          "SectorSize",
          "Sectors",
          "WorkerKey"
        ],
        "properties": {
          "BeaconEntries": {
            "$ref": "#/components/schemas/Nullable_Array_of_BeaconEntry"
          },
          "EligibleForMining": {
            "type": "boolean"
          },
          "MinerPower": {
            "$ref": "#/components/schemas/BigInt"
          },
          "NetworkPower": {
            "$ref": "#/components/schemas/BigInt"
          },
          "PrevBeaconEntry": {
            "$ref": "#/components/schemas/BeaconEntry"
          },
          "SectorSize": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Sectors": {
            "$ref": "#/components/schemas/Nullable_Array_of_ExtendedSectorInfo"
          },
          "WorkerKey": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "MsigVesting": {
        "type": "object",
        "required": [
          "InitialBalance",
          "StartEpoch",
          "UnlockDuration"
        ],
        "properties": {
          "InitialBalance": {
            "$ref": "#/components/schemas/BigInt"
          },
          "StartEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "UnlockDuration": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NatStatusResult": {
        "type": "object",
        "required": [
          "Reachability"
        ],
        "properties": {
          "PublicAddrs": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "Reachability": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NetInfoResult": {
        "type": "object",
        "required": [
          "num_connections",
          "num_established",
          "num_peers",
          "num_pending",
          "num_pending_incoming",
          "num_pending_outgoing"
        ],
        "properties": {
          "num_connections": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_established": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_peers": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          },
          "num_pending": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_pending_incoming": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_pending_outgoing": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          }
        }
      },
      "NetworkParams": {
        "type": "object",
        "required": [
          "BlockDelaySecs",
          "ConsensusMinerMinPower",
          "Eip155ChainID",
          "ForkUpgradeParams",
          "NetworkName",
          "PreCommitChallengeDelay",
          "SupportedProofTypes"
        ],
        "properties": {
          "BlockDelaySecs": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "ConsensusMinerMinPower": {
            "$ref": "#/components/schemas/BigInt"
          },
          "Eip155ChainID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "ForkUpgradeParams": {
            "$ref": "#/components/schemas/ForkUpgradeParams"
          },
          "NetworkName": {
            "type": "string"
          },
          "PreCommitChallengeDelay": {
            "type": "integer",
            "format": "int64"
          },
          "SupportedProofTypes": {
            "$ref": "#/components/schemas/int64"
          }
        }
      },
      "NodeChainStatus": {
        "type": "object",
        "required": [
          "blocks_per_tipset_last_100",
          "blocks_per_tipset_last_finality"
        ],
        "properties": {
          "blocks_per_tipset_last_100": {
            "type": "number",
            "format": "double"
          },
          "blocks_per_tipset_last_finality": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "NodePeerStatus": {
        "type": "object",
        "required": [
          "peers_to_publish_blocks",
          "peers_to_publish_msgs"
        ],
        "properties": {
          "peers_to_publish_blocks": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "peers_to_publish_msgs": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          }
        }
      },
      "NodeStatusResult": {
        "type": "object",
        "required": [
          "chain_status",
          "peer_status",
          "sync_status"
        ],
        "properties": {
          "chain_status": {
            "$ref": "#/components/schemas/NodeChainStatus"
          },
          "peer_status": {
            "$ref": "#/components/schemas/NodePeerStatus"
          },
          "sync_status": {
            "$ref": "#/components/schemas/NodeSyncStatus"
          }
        }
      },
      "NodeSyncStatus": {
        "type": "object",
        "required": [
          "behind",
          "epoch"
        ],
        "properties": {
          "behind": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "epoch": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "NonEmpty_Array_of_BlockHeader": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BlockHeader"
        },
        "minItems": 1
      },
      "NonEmpty_Array_of_Cid": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Cid"
        },
        "minItems": 1
      },
      "Nonce": {
        "type": "string"
      },
      "Nullable_Address": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_Array_of_Address": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/Address"
        }
      },
      "Nullable_Array_of_Base64String": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/Base64String"
        }
      },
      "Nullable_Array_of_BeaconEntry": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/BeaconEntry"
        }
      },
      "Nullable_Array_of_Cid": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/Cid"
        }
      },
      "Nullable_Array_of_ExecutionTrace": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/ExecutionTrace"
        }
      },
      "Nullable_Array_of_ExtendedSectorInfo": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/ExtendedSectorInfo"
        }
      },
      "Nullable_Array_of_Message": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/Message"
        }
      },
      "Nullable_Array_of_PoStProof": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/PoStProof"
        }
      },
      "Nullable_Array_of_SignedMessage": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/SignedMessage"
        }
      },
      "Nullable_Array_of_SyncState": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "$ref": "#/components/schemas/SyncState"
        }
      },
      "Nullable_Array_of_uint64": {
        "type": [
          "array",
          "null"
        ],
        "items": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "Nullable_Base64String": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Base64String"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_Cid": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Cid"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_DateTime": {
        "type": [
          "string",
          "null"
        ],
        "format": "date-time"
      },
      "Nullable_ElectionProof": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ElectionProof"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_PendingBeneficiaryChange": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PendingBeneficiaryChange"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_Receipt": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Receipt"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_Signature": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Signature"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_String": {
        "type": [
          "string",
          "null"
        ]
      },
      "Nullable_Ticket": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Ticket"
          },
          {
            "type": "null"
          }
        ]
      },
      "Nullable_Tipset": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Tipset"
          },
          {
            "type": "null"
          }
        ]
      },
      "ObjStat": {
        "type": "object",
        "required": [
          "Links",
          "Size"
        ],
        "properties": {
          "Links": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          },
          "Size": {
            "type": "integer",
            "format": "uint",
            "minimum": 0.0
          }
        }
      },
      "PathChange_for_Tipset": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Type",
              "Val"
            ],
            "properties": {
              "Type": {
                "type": "string",
                "enum": [
                  "revert"
                ]
              },
              "Val": {
                "$ref": "#/components/schemas/Tipset"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Type",
              "Val"
            ],
            "properties": {
              "Type": {
                "type": "string",
                "enum": [
                  "apply"
                ]
              },
              "Val": {
                "$ref": "#/components/schemas/Tipset"
              }
            }
          }
        ]
      },
      "PendingBeneficiaryChange": {
        "type": "object",
        "required": [
          "ApprovedByBeneficiary",
          "ApprovedByNominee",
          "NewBeneficiary",
          "NewExpiration",
          "NewQuota"
        ],
        "properties": {
          "ApprovedByBeneficiary": {
            "type": "boolean"
          },
          "ApprovedByNominee": {
            "type": "boolean"
          },
          "NewBeneficiary": {
            "$ref": "#/components/schemas/Address"
          },
          "NewExpiration": {
            "type": "integer",
            "format": "int64"
          },
          "NewQuota": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "PoStProof": {
        "type": "object",
        "required": [
          "PoStProof",
          "ProofBytes"
        ],
        "properties": {
          "PoStProof": {
            "$ref": "#/components/schemas/int64"
          },
          "ProofBytes": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      },
      "PublicVersion": {
        "description": "Represents the current version of the API.",
        "type": "object",
        "required": [
          "APIVersion",
          "BlockDelay",
          "Version"
        ],
        "properties": {
          "APIVersion": {
            "$ref": "#/components/schemas/ShiftingVersion"
          },
          "BlockDelay": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "Version": {
            "type": "string"
          }
        }
      },
      "RPCSyncState": {
        "type": "object",
        "required": [
          "ActiveSyncs"
        ],
        "properties": {
          "ActiveSyncs": {
            "$ref": "#/components/schemas/Nullable_Array_of_SyncState"
          }
        }
      },
      "Receipt": {
        "type": "object",
        "required": [
          "ExitCode",
          "GasUsed",
          "Return"
        ],
        "properties": {
          "EventsRoot": {
            "default": null,
            "$ref": "#/components/schemas/Nullable_Cid"
          },
          "ExitCode": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "GasUsed": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Return": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      },
      "ReturnTrace": {
        "type": "object",
        "required": [
          "ExitCode",
          "Return",
          "ReturnCodec"
        ],
        "properties": {
          "ExitCode": {
            "$ref": "#/components/schemas/ExitCode"
          },
          "Return": {
            "$ref": "#/components/schemas/Base64String"
          },
          "ReturnCodec": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "SectorExpiration": {
        "type": "object",
        "required": [
          "Early",
          "OnTime"
        ],
        "properties": {
          "Early": {
            "type": "integer",
            "format": "int64"
          },
          "OnTime": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SectorLocation": {
        "type": "object",
        "required": [
          "Deadline",
          "Partition"
        ],
        "properties": {
          "Deadline": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Partition": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "SectorOnChainInfo": {
        "type": "object",
        "required": [
          "Activation",
          "DealIDs",
          "DealWeight",
          "ExpectedDayReward",
          "ExpectedStoragePledge",
          "Expiration",
          "Flags",
          "InitialPledge",
          "PowerBaseEpoch",
          "ReplacedDayReward",
          "SealProof",
          "SealedCID",
          "SectorKeyCID",
          "SectorNumber",
          "VerifiedDealWeight"
        ],
        "properties": {
          "Activation": {
            "description": "Epoch during which the sector proof was accepted",
            "type": "integer",
            "format": "int64"
          },
          "DealIDs": {
            "$ref": "#/components/schemas/Nullable_Array_of_uint64"
          },
          "DealWeight": {
            "description": "Integral of active deals over sector lifetime",
            "$ref": "#/components/schemas/BigInt"
          },
          "ExpectedDayReward": {
            "description": "Expected one day projection of reward for sector computed at activation time",
            "$ref": "#/components/schemas/BigInt"
          },
          "ExpectedStoragePledge": {
            "description": "Expected twenty day projection of reward for sector computed at activation time",
            "$ref": "#/components/schemas/BigInt"
          },
          "Expiration": {
            "description": "Epoch during which the sector expires",
            "type": "integer",
            "format": "int64"
          },
          "Flags": {
            "description": "Additional flags, see [`fil_actor_miner_state::v12::SectorOnChainInfoFlags`]",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "InitialPledge": {
            "description": "Pledge collected to commit this sector",
            "$ref": "#/components/schemas/BigInt"
          },
          "PowerBaseEpoch": {
            "description": "Epoch at which this sector's power was most recently updated",
            "type": "integer",
            "format": "int64"
          },
          "ReplacedDayReward": {
            "$ref": "#/components/schemas/BigInt"
          },
          "SealProof": {
            "description": "The seal proof type implies the PoSt proofs",
            "type": "integer",
            "format": "int64"
          },
          "SealedCID": {
            "description": "`CommR`",
            "$ref": "#/components/schemas/Cid"
          },
          "SectorKeyCID": {
            "$ref": "#/components/schemas/Nullable_Cid"
          },
          "SectorNumber": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "VerifiedDealWeight": {
            "description": "Integral of active verified deals over sector lifetime",
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "SectorPreCommitInfo": {
        "type": "object",
        "required": [
          "DealIDs",
          "Expiration",
          "SealProof",
          "SealRandEpoch",
          "SealedCID",
          "SectorNumber",
          "UnsealedCid"
        ],
        "properties": {
          "DealIDs": {
            "$ref": "#/components/schemas/Nullable_Array_of_uint64"
          },
          "Expiration": {
            "type": "integer",
            "format": "int64"
          },
          "SealProof": {
            "$ref": "#/components/schemas/int64"
          },
          "SealRandEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "SealedCID": {
            "$ref": "#/components/schemas/Cid"
          },
          "SectorNumber": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "UnsealedCid": {
            "$ref": "#/components/schemas/Nullable_Cid"
          }
        }
      },
      "SectorPreCommitOnChainInfo": {
        "type": "object",
        "required": [
          "Info",
          "PreCommitDeposit",
          "PreCommitEpoch"
        ],
        "properties": {
          "Info": {
            "$ref": "#/components/schemas/SectorPreCommitInfo"
          },
          "PreCommitDeposit": {
            "$ref": "#/components/schemas/BigInt"
          },
          "PreCommitEpoch": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SectorSize": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      },
      "ShiftingVersion": {
        "description": "Integer based value on version information. Highest order bits for Major, Mid order for Minor and lowest for Patch.",
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      },
      "Signature": {
        "type": "object",
        "required": [
          "Data",
          "Type"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/Base64String"
          },
          "Type": {
            "$ref": "#/components/schemas/SignatureTypeLotusJson"
          }
        }
      },
      "SignatureType": {
        "description": "Signature variants for Filecoin signatures.",
        "type": "string",
        "enum": [
          "Secp256k1",
          "Bls",
          "Delegated"
        ]
      },
      "SignatureTypeLotusJson": {
        "anyOf": [
          {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          },
          {
            "$ref": "#/components/schemas/SignatureType"
          }
        ]
      },
      "SignedMessage": {
        "type": "object",
        "required": [
          "Message",
          "Signature"
        ],
        "properties": {
          "CID": {
            "$ref": "#/components/schemas/Nullable_Cid"
          },
          "Message": {
            "$ref": "#/components/schemas/Message"
          },
          "Signature": {
            "$ref": "#/components/schemas/Signature"
          }
        }
      },
      "SyncStage": {
        "type": "string"
      },
      "SyncState": {
        "type": "object",
        "required": [
          "Epoch",
          "Message",
          "Stage"
        ],
        "properties": {
          "Base": {
            "$ref": "#/components/schemas/Nullable_Tipset"
          },
          "End": {
            "$ref": "#/components/schemas/Nullable_DateTime"
          },
          "Epoch": {
            "type": "integer",
            "format": "int64"
          },
          "Message": {
            "type": "string"
          },
          "Stage": {
            "$ref": "#/components/schemas/SyncStage"
          },
          "Start": {
            "$ref": "#/components/schemas/Nullable_DateTime"
          },
          "Target": {
            "$ref": "#/components/schemas/Nullable_Tipset"
          }
        }
      },
      "Ticket": {
        "type": "object",
        "required": [
          "VRFProof"
        ],
        "properties": {
          "VRFProof": {
            "$ref": "#/components/schemas/Base64String"
          }
        }
      },
      "Tipset": {
        "$ref": "#/components/schemas/TipsetInner"
      },
      "TipsetInner": {
        "type": "object",
        "required": [
          "Blocks",
          "Cids",
          "Height"
        ],
        "properties": {
          "Blocks": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_BlockHeader"
          },
          "Cids": {
            "$ref": "#/components/schemas/NonEmpty_Array_of_Cid"
          },
          "Height": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "required": [
          "Approved",
          "ID",
          "Method",
          "Params",
          "To",
          "Value"
        ],
        "properties": {
          "Approved": {
            "$ref": "#/components/schemas/Nullable_Array_of_Address"
          },
          "ID": {
            "type": "integer",
            "format": "int64"
          },
          "Method": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "Params": {
            "$ref": "#/components/schemas/Base64String"
          },
          "To": {
            "$ref": "#/components/schemas/Address"
          },
          "Value": {
            "$ref": "#/components/schemas/BigInt"
          }
        }
      },
      "Transactions": {
        "anyOf": [
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiEthTx"
            }
          }
        ]
      },
      "int64": {
        "type": "integer",
        "format": "int64"
      }
    }
  }
}
